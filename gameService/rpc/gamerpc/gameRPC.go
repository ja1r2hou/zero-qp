// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: gameService.proto

package gamerpc

import (
	"context"

	"zero-qp/gameService/rpc/game"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = game.Request
	Response = game.Response

	GameRPC interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultGameRPC struct {
		cli zrpc.Client
	}
)

func NewGameRPC(cli zrpc.Client) GameRPC {
	return &defaultGameRPC{
		cli: cli,
	}
}

func (m *defaultGameRPC) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := game.NewGameRPCClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
