// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: hallService.proto

package hallrpc

import (
	"context"

	"zero-qp/hallService/rpc/hall"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = hall.Request
	Response = hall.Response

	HallRPC interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultHallRPC struct {
		cli zrpc.Client
	}
)

func NewHallRPC(cli zrpc.Client) HallRPC {
	return &defaultHallRPC{
		cli: cli,
	}
}

func (m *defaultHallRPC) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := hall.NewHallRPCClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
